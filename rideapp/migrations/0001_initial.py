# Generated by Django 2.2.5 on 2019-11-16 20:20

from decimal import Decimal
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import djmoney.models.fields
import mapbox_location_field.models
import phone_field.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('venmo_id', models.CharField(default='', max_length=200)),
                ('phone_number', phone_field.models.PhoneField(max_length=31)),
                ('photo', models.ImageField(default='images/default.jpg', upload_to='images/')),
                ('avg_rating', models.FloatField(default=0.0)),
                ('count', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickupLoc', models.CharField(max_length=200, verbose_name='Pick Up Location')),
                ('dropoffLoc', models.CharField(max_length=200, verbose_name='Drop Off Location')),
                ('additionalNotes', models.CharField(max_length=500, verbose_name='Additional Notes')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postedTime', models.DateTimeField(verbose_name='Posted Date')),
                ('rideDate', models.DateField(verbose_name='Ride Date')),
                ('rideTime', models.TimeField(verbose_name='Ride Departure Time:')),
                ('rideStartLoc', mapbox_location_field.models.LocationField(map_attrs={'center': [38.034887, -78.504832], 'marker_color': 'blue'}, null=True, verbose_name='Departure location')),
                ('startAddress', models.CharField(default='', max_length=500)),
                ('rideEndLoc', mapbox_location_field.models.LocationField(map_attrs={'center': [38.034887, -78.504832], 'marker_color': 'blue'}, null=True, verbose_name='Destination')),
                ('endAddress', models.CharField(default='', max_length=500)),
                ('generalDest', models.CharField(default='', max_length=500)),
                ('spacesAvailable', models.IntegerField(default=0, verbose_name='Spaces Available')),
                ('cost_currency', djmoney.models.fields.CurrencyField(choices=[('USD', 'US Dollar')], default='USD', editable=False, max_length=3)),
                ('cost', djmoney.models.fields.MoneyField(decimal_places=2, default=Decimal('0'), default_currency='USD', max_digits=5)),
                ('details', models.TextField(blank=True, default='', verbose_name='Additional details for riders (optional)')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('riderList', models.ManyToManyField(related_name='_ride_riderList_+', to='rideapp.Rider')),
                ('riderRequests', models.ManyToManyField(related_name='_ride_riderRequests_+', to='rideapp.Rider')),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=3)),
                ('feedback', models.TextField(default='')),
                ('driver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ride', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='rideapp.Ride')),
            ],
        ),
    ]
